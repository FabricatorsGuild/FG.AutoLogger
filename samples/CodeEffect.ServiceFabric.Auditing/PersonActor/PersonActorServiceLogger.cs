/*******************************************************************************************
*  This class is autogenerated from the class PersonActorServiceLogger
*  Do not directly update this class as changes will be lost on rebuild.
*******************************************************************************************/
using System;
using PersonActor.Diagnostics;
using Microsoft.ApplicationInsights;
using Microsoft.ApplicationInsights.DataContracts;
using Microsoft.ApplicationInsights.Extensibility;
using CodeEffect.Diagnostics.EventSourceGenerator.AI;


namespace PersonActor
{
	internal sealed class PersonActorServiceLogger : IPersonActorServiceLogger
	{
		private readonly Microsoft.ServiceFabric.Actors.Runtime.ActorService _actorService;
		private readonly Guid _correlationId;
		private readonly string _message;
		private readonly Microsoft.ApplicationInsights.TelemetryClient _telemetryClient;

		public PersonActorServiceLogger(
			Microsoft.ServiceFabric.Actors.Runtime.ActorService actorService,
			Guid correlationId,
			string message)
		{
			_actorService = actorService;
			_correlationId = correlationId;
			_message = message;
			
            _telemetryClient = new Microsoft.ApplicationInsights.TelemetryClient();
            _telemetryClient.Context.User.Id = Environment.UserName;
            _telemetryClient.Context.Session.Id = Guid.NewGuid().ToString();
            _telemetryClient.Context.Device.OperatingSystem = Environment.OSVersion.ToString();

		}

		public void PersonGenerated(
			string name,
			string title)
		{
			PersonActorServiceEventSource.Current.PersonGenerated(
				_actorService, 
				_correlationId, 
				_message, 
				name, 
				title
			);
			_telemetryClient.TrackEvent(
	            nameof(PersonGenerated),
	            new System.Collections.Generic.Dictionary<string, string>()
	            {
	                {"ActorType", _actorService.ActorTypeInformation.ImplementationType.ToString()},
                    {"ApplicationTypeName", _actorService.Context.CodePackageActivationContext.ApplicationTypeName},
                    {"ApplicationName", _actorService.Context.CodePackageActivationContext.ApplicationName},
                    {"ServiceTypeName", _actorService.Context.ServiceTypeName},
                    {"ServiceName", _actorService.Context.ServiceName.ToString()},
                    {"PartitionId", _actorService.Context.PartitionId.ToString()},
                    {"ReplicaOrInstanceId", _actorService.Context.ReplicaId.ToString()},
                    {"NodeName", _actorService.Context.NodeContext.NodeName},
                    {"CorrelationId", _correlationId.ToString()},
                    {"Message", _message},
                    {"Name", name},
                    {"Title", title}
	            });
    
		}



	}
}
