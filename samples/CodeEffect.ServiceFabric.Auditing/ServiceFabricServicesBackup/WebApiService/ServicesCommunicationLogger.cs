/*******************************************************************************************
*  This class is autogenerated from the class ServicesCommunicationLogger
*  Do not directly update this class as changes will be lost on rebuild.
*******************************************************************************************/
using System;
using System.Collections.Generic;
using System.Fabric;
using Microsoft.ApplicationInsights;
using Microsoft.ApplicationInsights.DataContracts;
using Microsoft.ApplicationInsights.Extensibility;
using CodeEffect.Diagnostics.EventSourceGenerator.AI;
using CodeEffect.ServiceFabric.Actors.Remoting.Runtime;
using CodeEffect.ServiceFabric.Services.Remoting.FabricTransport;
using Microsoft.ServiceFabric.Services.Remoting;
using WebApiService.Diagnostics;


namespace WebApiService
{
	internal sealed class ServicesCommunicationLogger : ICommunicationLogger
	{
		private readonly System.Fabric.StatelessServiceContext _context;
		private readonly Microsoft.ApplicationInsights.TelemetryClient _telemetryClient;

		public ServicesCommunicationLogger(
			System.Fabric.StatelessServiceContext context)
		{
			_context = context;
			
            _telemetryClient = new Microsoft.ApplicationInsights.TelemetryClient();
            _telemetryClient.Context.User.Id = Environment.UserName;
            _telemetryClient.Context.Session.Id = Guid.NewGuid().ToString();
            _telemetryClient.Context.Device.OperatingSystem = Environment.OSVersion.ToString();

		}

	    public void StartRequestContext(IEnumerable<ServiceRequestHeader> headers)
	    {
	        throw new NotImplementedException();
	    }

	    public void StopRequestContext(IEnumerable<ServiceRequestHeader> headers)
	    {
	        throw new NotImplementedException();
	    }

	    public void FailedRequestContext(IEnumerable<ServiceRequestHeader> headers, Exception exception)
	    {
	        throw new NotImplementedException();
	    }

	    public void FailedToReadCustomServiceMessageHeader(ServiceRemotingMessageHeaders serviceRemotingMessageHeaders, Exception ex)
	    {
	        throw new NotImplementedException();
	    }

	    public IDisposable RecieveServiceMessage(Uri requestUri, string serviceMethodName, ServiceRemotingMessageHeaders serviceMessageHeaders,
	        CustomServiceRequestHeader customServiceRequestHeader)
	    {
	        throw new NotImplementedException();
	    }

	    public void RecieveServiceMessageFailed(Uri requestUri, string serviceMethodName, ServiceRemotingMessageHeaders serviceMessageHeaders,
	        CustomServiceRequestHeader customServiceRequestHeader, Exception ex)
	    {
	        throw new NotImplementedException();
	    }

	    public void FailedToGetServiceMethodName(Uri requestUri, int interfaceId, int methodId, Exception ex)
	    {
	        throw new NotImplementedException();
	    }

	    public IDisposable RecieveActorMessage(Uri requestUri, string actorMethodName, ActorMessageHeaders actorMessageHeaders,
	        CustomServiceRequestHeader customServiceRequestHeader)
	    {
	        throw new NotImplementedException();
	    }

	    public void RecieveActorMessageFailed(Uri requestUri, string actorMethodName, ActorMessageHeaders actorMessageHeaders,
	        CustomServiceRequestHeader customServiceRequestHeader, Exception ex)
	    {
	        throw new NotImplementedException();
	    }

	    public void FailedToGetActorMethodName(ActorMessageHeaders actorMessageHeaders, Exception ex)
	    {
	        throw new NotImplementedException();
	    }

	    public void FailedToReadActorMessageHeaders(ServiceRemotingMessageHeaders serviceRemotingMessageHeaders, Exception ex)
	    {
	        throw new NotImplementedException();
	    }

	    public void EnumeratingPartitions(Uri serviceUri)
	    {
	        throw new NotImplementedException();
	    }

	    public void FailedToEnumeratePartitions(Uri serviceUri, Exception ex)
	    {
	        throw new NotImplementedException();
	    }

	    public void EnumeratedExistingPartitions(Uri serviceUri, IEnumerable<Int64RangePartitionInformation> partitions)
	    {
	        throw new NotImplementedException();
	    }

	    public void EnumeratedAndCachedPartitions(Uri serviceUri, IEnumerable<Int64RangePartitionInformation> partitions)
	    {
	        throw new NotImplementedException();
	    }

	    public IDisposable CallActor(Uri requestUri, string actorMethodName, ActorMessageHeaders actorMessageHeaders, CustomServiceRequestHeader customServiceRequestHeader)
	    {
	        throw new NotImplementedException();
	    }

	    public void CallActorFailed(Uri requestUri, string actorMethodName, ActorMessageHeaders actorMessageHeaders, CustomServiceRequestHeader customServiceRequestHeader,
	        Exception ex)
	    {
	        throw new NotImplementedException();
	    }

	    public IDisposable CallService(Uri requestUri, string serviceMethodName, ServiceRemotingMessageHeaders serviceMessageHeaders,
	        CustomServiceRequestHeader customServiceRequestHeader)
	    {
	        throw new NotImplementedException();
	    }

	    public void CallServiceFailed(Uri requestUri, string serviceMethodName, ServiceRemotingMessageHeaders serviceMessageHeaders,
	        CustomServiceRequestHeader customServiceRequestHeader, Exception ex)
	    {
	        throw new NotImplementedException();
	    }

	    public void ServiceClientFailed(Uri requestUri, CustomServiceRequestHeader customServiceRequestHeader, Exception ex)
	    {
	        throw new NotImplementedException();
	    }
	}
}
