/*******************************************************************************************
*  This class is autogenerated from the class TitleServiceLogger
*  Do not directly update this class as changes will be lost on rebuild.
*******************************************************************************************/
using System;
using System.Diagnostics.Tracing;
using System.Threading.Tasks;

namespace TitleService
{
	internal sealed partial class TitleActorServiceEventSource
	{

		private const int UpdateTitleEventId = 201;

		[Event(UpdateTitleEventId, Level = EventLevel.LogAlways, Message = "Update Title {10} {11}", Keywords = Keywords.TitleService)]
		private void UpdateTitle(
			string serviceName, 
			string serviceTypeName, 
			long replicaOrInstanceId, 
			Guid partitionId, 
			string applicationName, 
			string applicationTypeName, 
			string nodeName, 
			string correlationId, 
			string userId, 
			string requestUri, 
			string person, 
			string title)
		{
			WriteEvent(
				UpdateTitleEventId, 
				serviceName, 
				serviceTypeName, 
				replicaOrInstanceId, 
				partitionId, 
				applicationName, 
				applicationTypeName, 
				nodeName, 
				correlationId, 
				userId, 
				requestUri, 
				person, 
				title);
		}

		[NonEvent]
		public void UpdateTitle(
			System.Fabric.StatefulServiceContext serviceContext, 
			FG.ServiceFabric.Services.Remoting.FabricTransport.ServiceRequestContext requestContext, 
			string person, 
			string title)
		{
			if (this.IsEnabled())
			{
				UpdateTitle(
					serviceContext.ServiceName.ToString(), 
					serviceContext.ServiceTypeName, 
					serviceContext.ReplicaOrInstanceId, 
					serviceContext.PartitionId, 
					serviceContext.CodePackageActivationContext.ApplicationName, 
					serviceContext.CodePackageActivationContext.ApplicationTypeName, 
					serviceContext.NodeContext.NodeName, 
					FG.ServiceFabric.Services.Remoting.FabricTransport.ServiceRequestContext.Current?["correlationId"], 
					FG.ServiceFabric.Services.Remoting.FabricTransport.ServiceRequestContext.Current?["userId"], 
					FG.ServiceFabric.Services.Remoting.FabricTransport.ServiceRequestContext.Current?["requestUri"], 
					person, 
					title);
			}
		}


	}
}