/*******************************************************************************************
*  This class is autogenerated from the class DependencyLogger
*  Do not directly update this class as changes will be lost on rebuild.
*******************************************************************************************/
using System;
using System.Diagnostics.Tracing;
using System.Threading.Tasks;

namespace ConsoleApplication1.Diagnostics
{
	internal sealed partial class Sample
	{

		private const int StartCallExternalComponentEventId = 2001;

		[Event(StartCallExternalComponentEventId, Level = EventLevel.LogAlways, Message = "Start Call External Component {2} {3}", Keywords = Keywords.Dependency, Opcode = EventOpcode.Start)]
		public void StartCallExternalComponent(
			int processId, 
			string machineName, 
			string requestName, 
			string content)
		{
			WriteEvent(
				StartCallExternalComponentEventId, 
				processId, 
				machineName, 
				requestName, 
				content);
		}


		private const int StopCallExternalComponentEventId = 4002;

		[Event(StopCallExternalComponentEventId, Level = EventLevel.LogAlways, Message = "Stop Call External Component {2} {3}", Keywords = Keywords.Dependency, Opcode = EventOpcode.Stop)]
		public void StopCallExternalComponent(
			int processId, 
			string machineName, 
			string requestName, 
			string content)
		{
			WriteEvent(
				StopCallExternalComponentEventId, 
				processId, 
				machineName, 
				requestName, 
				content);
		}


		private const int StartRecieveMessageEventId = 6003;

		[Event(StartRecieveMessageEventId, Level = EventLevel.LogAlways, Message = "{2}", Keywords = Keywords.Dependency, Opcode = EventOpcode.Start)]
		public void StartRecieveMessage(
			int processId, 
			string machineName, 
			string message)
		{
			WriteEvent(
				StartRecieveMessageEventId, 
				processId, 
				machineName, 
				message);
		}


		private const int StopRecieveMessageEventId = 8004;

		[Event(StopRecieveMessageEventId, Level = EventLevel.LogAlways, Message = "{2}", Keywords = Keywords.Dependency, Opcode = EventOpcode.Stop)]
		public void StopRecieveMessage(
			int processId, 
			string machineName, 
			string message)
		{
			WriteEvent(
				StopRecieveMessageEventId, 
				processId, 
				machineName, 
				message);
		}


	}
}